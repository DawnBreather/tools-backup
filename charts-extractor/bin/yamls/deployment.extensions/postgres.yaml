apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"stack":"odms","tier":"database"},"name":"postgres","namespace":"staging"},"spec":{"selector":{"matchLabels":{"stack":"odms","tier":"database"}},"template":{"metadata":{"labels":{"stack":"odms","tier":"database"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"postgres-envvar"}}],"image":"postgres:12.2-alpine","imagePullPolicy":"IfNotPresent","name":"postgres","ports":[{"containerPort":5432,"name":"psql","protocol":"TCP"}],"volumeMounts":[{"mountPath":"/docker-entrypoint-initdb.d","name":"init-scripts"}]}],"volumes":[{"configMap":{"defaultMode":420,"items":[{"key":"init","path":"init.sql"}],"name":"init-scripts","optional":false},"name":"init-scripts"}]}}}}'
  creationTimestamp: "2020-05-24T18:25:38Z"
  generation: 3
  labels:
    stack: odms
    tier: database
  name: postgres
  namespace: staging
  resourceVersion: "8316081"
  selfLink: /apis/apps/v1/namespaces/staging/deployments/postgres
  uid: 9a4a10c9-b9a5-4a7a-b1fe-a48c2da5f762
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      stack: odms
      tier: database
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-05-31T10:55:25Z"
        field.cattle.io/ports: '[[{"containerPort":5432,"dnsName":"postgres","hostPort":0,"kind":"ClusterIP","name":"psql","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        stack: odms
        tier: database
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: postgres
            optional: false
        image: postgres:12.2-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 2
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 2
        name: postgres
        ports:
        - containerPort: 5432
          name: psql
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 2
          successThreshold: 2
          tcpSocket:
            port: 5432
          timeoutSeconds: 2
        resources: {}
        securityContext:
          capabilities: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: init-scripts
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: init-scripts
        secret:
          defaultMode: 420
          items:
          - key: init
            path: init.sql
          optional: false
          secretName: postgres-init-scripts
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-05-30T05:26:44Z"
    lastUpdateTime: "2020-05-30T05:26:44Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-05-24T18:25:38Z"
    lastUpdateTime: "2020-05-31T10:56:00Z"
    message: ReplicaSet "postgres-6fc95dd4fd" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
