apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: "2019-11-19T20:08:17Z"
  generation: 3
  labels:
    app: redis
    chart: redis-9.0.2
    heritage: Tiller
    io.cattle.field/appId: redis-cache
    release: redis-cache
  name: redis-cache-master
  namespace: redis-staging
  resourceVersion: "23644774"
  selfLink: /apis/apps/v1/namespaces/redis-staging/statefulsets/redis-cache-master
  uid: 539e1dd5-0b08-11ea-b777-42010a80017f
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
      release: redis-cache
      role: master
  serviceName: redis-cache-headless
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2019-11-25T23:13:58Z"
        checksum/configmap: b96400fde1f4376b70a3c0720f065b57daf24f65cc86ff97f4ce200cda0b27dd
        checksum/health: 732929a908b23421bf61a28f3f038c9c80e582a9a3a555428d9e4fcf69045c3f
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        field.cattle.io/ports: '[[{"containerPort":6379,"dnsName":"redis-cache-master-","name":"redis","protocol":"TCP","sourcePort":0}]]'
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: redis
        chart: redis-9.0.2
        release: redis-cache
        role: master
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: instance_type
                operator: In
                values:
                - persistent
      containers:
      - command:
        - /bin/bash
        - -c
        - |-
          if [[ -n $REDIS_PASSWORD_FILE ]]; then
            password_aux=`cat ${REDIS_PASSWORD_FILE}`
            export REDIS_PASSWORD=$password_aux
          fi
          if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
          fi
          if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
          fi
          ARGS=("--port" "${REDIS_PORT}")
          ARGS+=("--protected-mode" "no")
          ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
          ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
          /run.sh ${ARGS[@]}
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_REPLICATION_MODE
          value: master
        image: docker.io/ranchercharts/bitnami-redis:5.0.5-debian-9-r95
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_liveness_local.sh 5
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: redis-cache
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - /health/ping_readiness_local.sh 5
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /health
          name: health
        - mountPath: /data
          name: redis-data
        - mountPath: /opt/bitnami/redis/mounted-etc
          name: config
        - mountPath: /opt/bitnami/redis/etc/
          name: redis-tmp-conf
      dnsPolicy: ClusterFirst
      nodeSelector:
        instance_type: persistent
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 493
          name: redis-cache-health
        name: health
      - configMap:
          defaultMode: 420
          name: redis-cache
        name: config
      - emptyDir: {}
        name: redis-data
      - emptyDir: {}
        name: redis-tmp-conf
  updateStrategy:
    type: RollingUpdate
status:
  collisionCount: 0
  currentReplicas: 1
  currentRevision: redis-cache-master-7fdf9896db
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updateRevision: redis-cache-master-7fdf9896db
  updatedReplicas: 1
